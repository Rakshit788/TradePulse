generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  access_token      String
  expires_at        BigInt
  id_token          String
  provider          String
  providerAccountId String
  scope             String
  token_type        String
  type              String
  userId            String @db.ObjectId

  @@unique([provider, providerAccountId])
}

model Asset {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @db.Date
  description  String
  initialPrice Float
  name         String
  symbol       String   @unique
  updatedAt    DateTime @db.Date
}

model Kline {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  assetId   String   @db.ObjectId
  close     Float
  endTime   DateTime @db.Date
  high      Float
  interval  String
  low       Float
  open      Float
  startTime DateTime @db.Date
  volume    Float
}

model LimitOrder {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  assetId   String   @db.ObjectId
  createdAt DateTime @db.Date
  price     Float
  qty       Float
  side      String
  status    String
  userId    String   @db.ObjectId

  @@index([status, side, assetId, price, createdAt], map: "matching_index")
  @@index([assetId, status, qty])
}

model MatchingAuditLog {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  executedAt Json?
  /// Field referred in an index, but found no data to define the type.
  operation  Json?

  @@index([operation, executedAt])
}

model MatchingLock {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model PortfolioItem {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  assetId Json?
  /// Field referred in an index, but found no data to define the type.
  userId  Json?

  @@unique([userId, assetId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  expires      DateTime @db.Date
  sessionToken String   @unique
  userId       String   @db.ObjectId
}

model SystemConfig {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  key Json?  @unique
}

model Trade {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  assetId    Json?
  /// Field referred in an index, but found no data to define the type.
  executedAt Json?

  @@index([assetId, executedAt])
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  balance        Float
  cashBalance    Float?
  createdAt      DateTime @db.Date
  email          String   @unique
  /// Could not determine type: the field only had null or empty values in the sample set.
  emailVerified  Json?
  image          String
  influenceScore Float
  name           String
}

model VerificationToken {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  identifier Json?
  /// Field referred in an index, but found no data to define the type.
  token      Json?  @unique

  @@unique([identifier, token])
}
