generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  access_token      String
  expires_at        BigInt
  id_token          String
  provider          String
  providerAccountId String
  scope             String
  token_type        String
  type              String
  userId            String @db.ObjectId

  @@unique([provider, providerAccountId])
}

model Asset {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now())
  description  String
  initialPrice Float
  name         String
  symbol       String   @unique
  updatedAt    DateTime @updatedAt
}

model Kline {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  assetId   String   @db.ObjectId
  close     Float
  endTime   DateTime
  high      Float
  interval  String
  low       Float
  open      Float
  startTime DateTime
  volume    Float
}

model LimitOrder {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  assetId   String   @db.ObjectId
  createdAt DateTime @default(now())
  price     Float
  qty       Float
  side      String
  status    String
  userId    String   @db.ObjectId

  @@index([status, side, assetId, price, createdAt], map: "matching_index")
  @@index([assetId, status, qty])
}

model MatchingAuditLog {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  executedAt DateTime @default(now())
  operation  String

  @@index([operation, executedAt])
}

model MatchingLock {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime @default(now())

  @@index([createdAt])
}
model PortfolioItem {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  assetId String @db.ObjectId
  userId  String @db.ObjectId

  qty     Float

  @@unique([userId, assetId])
}


model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  expires      DateTime
  sessionToken String   @unique
  userId       String   @db.ObjectId
}

model SystemConfig {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key   String @unique
  value String
}

model Trade {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  assetId    String   @db.ObjectId
  executedAt DateTime @default(now())
  price      Float
  qty        Float
  buyerId    String   @db.ObjectId
  sellerId   String   @db.ObjectId

  @@index([assetId, executedAt])
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  balance        Float    @default(100000)
  cashBalance    Float    @default(100000)
  createdAt      DateTime @default(now())
  email          String   @unique
  emailVerified  DateTime?
  image          String
  influenceScore Float    @default(0)
  name           String
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
